import nltk
import types
import json
import sys
import copy
#globalvariable,result contains all data that a goal needs
#globalvariable,we use coordinate to discribe the world and use d_world to
#represent it 

world=[]
world_objects={}
d_world=[]
       
def main():
     result={}
     grammar=nltk.data.load("file:shrdlite_grammar.fcfg",cache=False) 
     parser=nltk.FeatureChartParser(grammar)
     sentence="move the small  box on the small plank"
     sentence=sentence.split()
     print sentence
     import interpreter
     result["utterance"]=sentence
     #content of function parse
     do_parse = getattr(parser, 'nbest_parse', 
                       getattr(parser, 'parse_all', parser.parse))
     trees=do_parse(sentence)
 
     result["trees"]=trees
     #content of function parse
     goals=[interpreter.interpret(tree,world,world_objects) for tree in trees]
     #deal with ambuiguity
     result["goals"]=goals
     import ambiguity
     ambiguity.deal_with_ambiguity(list(goals),world,world_objects)
     goal=goals[0]
      
     #solve part
     import planner
     
     result["plan"]=planner.plan(goal,world,"",world_objects)
     result["output"]="success" 
     for r in result.values():
           print r
if __name__=="__main__":
      f=file("medium.json")
      json_data=json.load(f)
      world_objects=json_data["objects"]
      world=json_data["world"]
   
      main()
